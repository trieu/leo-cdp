<div class="row" id="page-title">
    <div class="col s12">
        <h2 id="form-title">{{pageTitle}}</h2>
    </div>
</div>

<div class="row">
    <div class="col s12">
        <a href="/">
            <i class="material-icons" style="vertical-align: bottom;">replay</i> Back
        </a>
         | 
        <a href="/new-password/{{userInfo._id}}">
            <i class="material-icons" style="vertical-align: bottom;">https</i> Change password
        </a>
    </div>
</div>

<div class="row">

    <form  id="form-edit" class="col s12" method="POST" action="/update" autocomplete="off">
        <input id="_id" type="hidden" name="_id" value="{{userInfo._id}}" />
        <div class="row">
            <div class="input-field col s12">
                <input id="username" type="text" name="username" value="{{userInfo.username}}" autocomplete="new-username" readonly disabled/>
                <label for="username">Username</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <input id="email" type="email" name="email" value="{{userInfo.email}}" autocomplete="new-email" required/>
                <label for="email">Email</label>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s12">
                <input id="managedby" type="text" name="text" value="{{userInfo.managedby}}" autocomplete="new-managedby" readonly disabled/>
                <label for="managedby">Managed by</label>
            </div>
        </div>

        {{#if notMe}}

        <div class="row">
            <div class="col s12">
                <label class="chip-label">
                    Data Sources (ex: all, danet-mienphi, ...)
                </label>
                <div id="chip-data-sources" data-chip={{userInfo.dataSources}}></div>
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                <label class="chip-label">
                    Roles (ex: user, client, agency, sale, publisher, operator)
                </label>
                <div id="chip-roles" data-chip={{userInfo.roles}}></div>
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                <label class="chip-label">
                    Roles Ads
                </label>
                <table id="table-roles-ads" data-roles={{userInfo.rolesAds}} class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th style="width:10%;">Id</th>
                            <th style="width:40%;">Name</th>
                            <th style="width:25%;">Booking Time</th>
                            <th style="width:10%;">Status</th>
                            <th style="width:15%;">Grant Permission</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col s12">
                <label class="chip-label">
                    Roles Placement
                </label>
                <table id="table-roles-placement" data-roles={{userInfo.rolesPlacement}} class="display" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th style="width:10%;">Id</th>
                            <th style="width:45%;">Name</th>
                            <th style="width:30%;">Type</th>
                            <th style="width:15%;">Grant Permission</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

        <div class="row">
            <div class="col s12">
                <label>Status</label>
                <div class="switch">
                    <label>
                    Off
                    <input id="status" type="checkbox" {{#if userInfo.status}} checked {{/if}}>
                    <span class="lever"></span>
                    On
                    </label>
                </div>
            </div>
        </div>

        {{/if}}

        <button type="submit" class="waves-effect waves-light btn-large right">Ok</button>
    </form>

    <div  id="message" class="col s12"></div>

</div>


<link rel="stylesheet" type="text/css" href="css/jquery.dataTables.min.css" media="all">
<script src="js/jquery.dataTables.min.js" type="text/javascript"></script>
<script type="text/javascript">
    
    function switcher(ele, id){
        id = parseInt(id);
        var ads = JSON.parse(ele.attr('data-roles'));
        var checked = (!jQuery.isEmptyObject(ads) && ads[id]) ? 'checked' : '';
        var html = '<div class="switch"><label>Off'+
                    '<input class="roles-checkbox" type="checkbox" data-id='+id+' '+checked+ '>'+
                    '<span class="lever"></span>On</label></div>';
        return html;
    }

    function getChipRoles(el){
        if(el.length <= 0){
            return false;
        }

        var chipRoles = el;
        var chipRoles_data = new Array();
        var chipRoles_get = JSON.parse(chipRoles.attr('data-chip'));
        for(var i in chipRoles_get){
            chipRoles_data.push({tag: i});
        }
        var rolesDefault = {
                    'user': null,
                    'client': null,
                    'agency': null,
                    'sale': null,
                    'publisher': null,
                    'operator': null
                };
        chipRoles.material_chip({
            autocompleteOptions: {
                data: rolesDefault,
                minLength: 1
            },
            data: chipRoles_data,
            secondaryPlaceholder: '+Role',
            placeholder: 'Enter a role'
        });

        return chipRoles;
    }

    function getChipDataSources(el){
        if(el.length <= 0){
            return false;
        }

        var chipDataSources = el;
        var chipDataSources_data = new Array();
        var chipDataSources_get = JSON.parse(chipDataSources.attr('data-chip'));
        for(var i in chipDataSources_get){
            chipDataSources_data.push({tag: i});
        }
        chipDataSources.material_chip({
            autocompleteOptions: {
                data: {
                    'all': null,
                    'danet-mienphi': null
                },
                minLength: 1
            },
            data: chipDataSources_data,
            secondaryPlaceholder: '+Sources',
            placeholder: 'Enter a data sources'
        });

        return chipDataSources;
    }

    $(window).on('load', function() {

        /*
        *   Setup Role
        */
        var chipRoles = getChipRoles($('#chip-roles'));
        ///////////////
        var chipDataSources = getChipDataSources($('#chip-data-sources'));

        /*
        *   Setup Role Ads
        */
        var tableRolesAds = $("#table-roles-ads");
        var dataRolesAds = {};
        if(tableRolesAds.length > 0){
            dataRolesAds = JSON.parse(tableRolesAds.attr('data-roles'));
        }

        tableRolesAds.on("click",".roles-checkbox", function(){
            var id = parseInt($(this).attr('data-id'));
            if($(this).is(':checked')){
                dataRolesAds[id] = true;
            }
            else{
                delete dataRolesAds[id];
            }
        });
        //////////////
        var tableRolesPlacement = $("#table-roles-placement");
        var dataRolesPlacement = {};
        if(tableRolesPlacement.length > 0){
            dataRolesPlacement = JSON.parse(tableRolesPlacement.attr('data-roles'));
        }
        tableRolesPlacement.on("click",".roles-checkbox", function(){
            var id = parseInt($(this).attr('data-id'));
            if($(this).is(':checked')){
                dataRolesPlacement[id] = true;
            }
            else{
                delete dataRolesPlacement[id];
            }
        });


        /*
        *   Get data form ajax
        */
        $.ajax({
            url: '/ads/api-roles-ads',
            type: 'GET',
            contentType: 'application/json',
            dataType:'json',
            success: function(data){
                if($('#table-roles-ads').length <= 0){
                    return false;
                }

                var t = $('#table-roles-ads').DataTable({
                    "ordering": false,
                    "info":     false
                });
                for(var i in data){
                    t.row.add( [
                        data[i].id,
                        data[i].name,
                        data[i].runDate + ' âž¡ ' + data[i].expiredDate,
                        data[i].status,
                        switcher($('#table-roles-ads'), data[i].id)
                    ] ).draw( false );
                }
            }
        });
        /////////////
        $.ajax({
            url: '/ads/api-roles-placement',
            type: 'GET',
            contentType: 'application/json',
            dataType:'json',
            success: function(data){
                if($('#table-roles-placement').length <= 0){
                    return false;
                }
                var t = $('#table-roles-placement').DataTable({
                    "ordering": false,
                    "info":     false
                });
                for(var i in data){
                    t.row.add( [
                        data[i].id,
                        data[i].name,
                        data[i].type,
                        switcher($('#table-roles-placement'), data[i].id)
                    ] ).draw( false );
                }
            }
        });


        /*
        *   Send form
        */
        $('#form-edit').submit(function(e){
            e.preventDefault();

            var data = {};
            data._id = $('#_id').val();
            data.username = $('#username').val();
            data.email = $('#email').val();

            var url = $(this).attr('action');

            //get roles
            var roles = {};
            if(chipRoles){
                var roles_data = chipRoles.material_chip('data');
                for(var i in roles_data){
                    roles[roles_data[i].tag] = true;
                }
            }
            
            
            //get dataSources
            var dataSources = {};
            if(chipDataSources){
                var dataSources_data = chipDataSources.material_chip('data');
                for(var i in dataSources_data){
                    dataSources[dataSources_data[i].tag] = true;
                }
            }

            //get dataRolesAds && dataRolesPlacement
            data.rolesAds = dataRolesAds || {};
            data.rolesPlacement = dataRolesPlacement || {};

            data.roles = roles;
            data.dataSources = dataSources;
            
            //console.log(data)
            
            if($('#status').length > 0){
                data.status = ( $('#status:checked').length == 1 ) ? true : false;
            }
            
            $.post(url, data,
            function(data, status){
                var alert = (data.success) ? 'alert-success' : 'alert-danger';
                var $toastContent = $('<div class="alert '+alert+'">'+data.message+'</div>');
                Materialize.toast($toastContent, 10000);
            });
        });

    });
</script>