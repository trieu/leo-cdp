<!-- Page Heading -->
<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Ad GeoLocation Analytics
        </h1>
    </div>
</div>
<!-- /.row -->

<style>
    .leaflet-container {
        background: rgba(0,0,0,.8) !important;
    }
</style>

<link rel="stylesheet" href="css/leaflet.css" />
<script src="js/leaflet.js"></script>
<script src="js/heatmap.js"></script>
<script src="js/leaflet-heatmap.js"></script>

<div class="row">
    <div id="map" style="width: 900px; height: 750px; margin-top: 5px;" ></div>

</div>

<script>
    window.onload = function () {

        var testData = {
            max: 8,
            data: [
                {lat: 35.8278, lng: -78.6421, count: 1}
            ]
        };

        var baseLayer = L.tileLayer(
                'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
                    maxZoom: 18
                }
        );

        var cfg = {
            // radius should be small ONLY if scaleRadius is true (or small radius is intended)
            "radius": 1,
            "maxOpacity": .4,
            // scales the radius based on map zoom
            "scaleRadius": true,
            // if set to false the heatmap uses the global maximum for colorization
            // if activated: uses the data maximum within the current map boundaries
            //   (there will always be a red spot with useLocalExtremas true)
            "useLocalExtrema": true,
            // which field name in your data represents the latitude - default "lat"
            latField: 'lat',
            // which field name in your data represents the longitude - default "lng"
            lngField: 'lng',
            // which field name in your data represents the data value - default "value"
            valueField: 'count'
        };


        var heatmapLayer = new HeatmapOverlay(cfg);

        var map = new L.Map('map', {
            center: new L.LatLng(10.75,  106.66),
            zoom: 8,
            layers: [baseLayer, heatmapLayer]
        });

        heatmapLayer.setData(testData);

        // make accessible for debugging
        layer = heatmapLayer;

        setInterval(function(){
            heatmapLayer.addData( {lat: 10.751, lng: 106.662, count: 6});
            heatmapLayer.addData( {lat: 10.392, lng: 105.416, count: 1});
            heatmapLayer.addData( {lat: 9.873, lng: 105.633, count: 1});

            heatmapLayer.addData( {lat: 18.648, lng: 105.562, count: 1});
            heatmapLayer.addData( {lat: 16.050, lng: 108.266, count: 2});
            heatmapLayer.addData( {lat: 16.301, lng: 107.866, count: 1});
            heatmapLayer.addData( {lat: 11.940, lng: 108.442, count: 1});
            heatmapLayer.addData( {lat: 21.034, lng: 105.832, count: 3});

        }, 1000);
    };
</script>